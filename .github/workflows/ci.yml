name: CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  IMAGE_NAME: ventodeco/hackathon-bi-2025

jobs:
  test_build_push:
    environment: ENV_PRODUCTION
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: hackathon_bi_2025
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      # - name: Install Rust
      #   uses: actions-rs/toolchain@v1
      #   with:
      #     toolchain: stable
      #     override: true

      # - name: Cache dependencies
      #   uses: actions/cache@v3
      #   with:
      #     path: |
      #       ~/.cargo/registry
      #       ~/.cargo/git
      #       target
      #     key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      # - name: Setup environment
      #   run: |
      #     cp .env.example .env
      #     cargo install sqlx-cli
      #     sqlx migrate run

      # - name: Run tests
      #   run: cargo test --verbose

      # - name: Build
      #   run: cargo build --verbose

      - name: Set up commit SHA tag
        id: vars
        run: echo "TAG=${{ github.sha }}" >> $GITHUB_ENV

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t $IMAGE_NAME:${{ env.TAG }} .

      - name: Push Docker image
        run: docker push $IMAGE_NAME:${{ env.TAG }}
